3.# Import necessary libraries
from flask import Flask, request, jsonify
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score

# Create a Flask app
app = Flask(__name__)

# Load the dataset (assuming it's a CSV file)
def load_data(file_path):
    data = pd.read_csv(file_path)
    return data

# Preprocess the data
def preprocess_data(data):
    # Assuming the target variable is 'Parkinsons'
    X = data.drop('Parkinsons', axis=1)
    y = data['Parkinsons']
    return X, y

# Train a machine learning model
def train_model(X, y):
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
    model = RandomForestClassifier()
    model.fit(X_train, y_train)
    y_pred = model.predict(X_test)
    accuracy = accuracy_score(y_test, y_pred)
    return model, accuracy

# Create a UI to input parameters and predict Parkinson's disease
@app.route('/predict', methods=['POST'])
def predict():
    data = request.get_json()
    # Assuming the input data is in the form of a dictionary
    input_data = pd.DataFrame([data])
    # Make predictions using the trained model
    prediction = model.predict(input_data)
    return jsonify({'prediction': prediction.tolist()})

if __name__ == '__main__':
    # Load the dataset
    data = load_data('parkinsons_data.csv')
    # Preprocess the data
    X, y = preprocess_data(data)
    # Train the model
    model, accuracy = train_model(X, y)
    print(f'Model Accuracy: {accuracy:.3f}')
    # Run the Flask app
    app.run(debug=True)
